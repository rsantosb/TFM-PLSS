set include BOOL off .

fmod COMMON-SIGN is
*** sorts @Def@ @DefSet@ @Token@ @Bubble@ @NeTokenList@ .
*** subsort @Def@ < @DefSet@ .

 sorts @Token@ @Bubble@ @NeTokenList@ . 
*** op __ : @DefSet@ @DefSet@ -> @DefSet@ [ctor assoc comm] .
endfm


fmod COMMAND-SIGN is
 ex COMMON-SIGN .

 sort @Command@ .

 op load_ : @Token@ -> @Command@ [ctor] .
 op red_ : @Bubble@ -> @Command@ [ctor] .
 op softrew_ : @Bubble@ -> @Command@ [ctor] .
 op exit : -> @Command@ [ctor] .
 op q : -> @Command@ [ctor] .
 op help : -> @Command@ [ctor] .
 op loadstrat_ : @Token@ -> @Command@ [ctor] . 

*** new
 op softnarrow__ : @Bubble@ @Bubble@ -> @Command@ [ctor] .
endfm


fmod PLSS-SIGN is
 pr COMMAND-SIGN .

 sort @Input@ .
 subsort @Command@ < @Input@ .

 op __ : @Input@ @Input@ -> @Input@ [ctor assoc] .
endfm


fmod META-PLSS-SIGN is
 including AUX-MODULE-OPS .

 op BUBBLES : -> FModule .
 op GRAMMAR : -> FModule [memo] .

 eq BUBBLES
    = (fmod 'GRAMMAR is
        including 'QID-LIST .
        sorts none .
        none
        op 'token : 'Qid -> '@Token@
             [special(
               (id-hook('Bubble, '1 '1)
                op-hook('qidSymbol, '<Qids>, nil, 'Qid)))] .
        op 'bubble : 'QidList -> '@Bubble@
             [special(
               (id-hook('Bubble, '1 '-1 '`( '`))
                op-hook('qidListSymbol, '__, 'QidList 'QidList, 'QidList)
                op-hook('qidSymbol, '<Qids>, nil, 'Qid)
                id-hook('Exclude, 'eq 'ceq 'rl 'crl 'mb 'cmb 'sd 'csd
                                  'var 'vars
                                  'sorts 'subsort 'subsorts 'op 'ops
                                  'protecting 'pr 'including 'inc 'extending
                                  'ctor 'assoc 'comm '== '/\ 'spec )))] .
        op 'neTokenList : 'QidList -> '@NeTokenList@
             [special(
               (id-hook('Bubble, '1 '-1 '`( '`))
                op-hook('qidListSymbol, '__, 'QidList 'QidList, 'QidList)
                op-hook('qidSymbol, '<Qids>, nil, 'Qid)
                id-hook('Exclude, '. ': '`[ )))] .
        none
        none
     endfm) .
 eq GRAMMAR = addImports(BUBBLES, (including 'PLSS-SIGN .)) .
endfm

set include BOOL on .
